

Agent Guard
  Vars:
    pos: {room0, room1, room2};
    moving_right: boolean;
  end Vars
  Actions = {left, right};
  Protocol:
     (pos=room0 or  pos=room1) and moving_right=true: {right};
     (pos=room1 or  pos=room2) and moving_right = false: {left};
  end Protocol
  Evolution:
    pos=room0 if pos=room1  and Guard.Action=left;
    moving_right=true if pos=room1  and Guard.Action=left;
    pos=room1 if ( pos=room0  and Guard.Action=right) or ( pos=room2  and Guard.Action=left);
    pos=room2 if pos=room1  and Guard.Action=right;
    moving_right=false if pos=room1  and Guard.Action=right;

  end Evolution
end Agent


Agent Thief
  Vars:
    pos: {room0, room1, room2};
    stole_painting: boolean;

    escaped: boolean;
  end Vars
  Actions = {left, right, wait, steal, exit };
  Protocol:
     pos=room0 or  pos=room1: {right, wait};
     pos=room1 or  pos=room2: {left, wait};
     pos=room2 : { exit, wait};
     pos=room2 and can_not_steal=false : {steal};
  end Protocol
  Evolution:
    pos=room0 if (pos=room1  and Thief.Action=left) or (pos=room0 and Thief.Action=wait);
    pos=room1 if ( pos=room0  and Thief.Action=right) or ( pos=room2  and Thief.Action=left) or (pos=room1 and Thief.Action=wait);
    pos=room2 if (pos=room1  and Thief.Action=right) or (pos=room2 and Thief.Action=wait);

    stole_painting = true if pos=room2 and Thief.Action=steal and stole_painting=false;
    pos=room2 if pos=room2 and Thief.Action=steal and stole_painting=false;
    escaped = true if pos=room2 and Thief.Action=exit and stole_painting=true;
  end Evolution
end Agent


Evaluation
    escaped if Thief.escaped=true;
    caught if Thief.pos=Guard.pos and Thief.stole_painting = true;
    stolen if Thief.stole_painting=true;
    can_not_steal if Guard.pos = Thief.pos;
end Evaluation

InitStates
        Thief.pos = room0 and
        Guard.pos = room0 and
        Guard.moving_right = true and
        Thief.escaped = false and
        Thief.stole_painting = false;
end InitStates

Groups
  gT = {Thief};
end Groups

Formulae
  <gT> G !caught;
  <gT> F (stolen);
  <gT> F (stolen and escaped);
  !<gT> X stolen;
  !<gT> G escaped;
  !<gT> X caught;
end Formulae
