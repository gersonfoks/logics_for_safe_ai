Semantics=SingleAssignment;

Agent Environment
  Vars:
    at_least_one: boolean;
    game_end: boolean;

  end Vars
  Actions = {nil};
  Protocol:
    at_least_one=true or at_least_one=false: {nil};
  end Protocol
  Evolution:
    at_least_one =true if Player1.Action = play_one or Player2.Action = play_one or Player3.Action = play_one;
  end Evolution
end Agent


Agent Player1
  Lobsvars = {at_least_one, game_end};
  Vars:
    played_action: {play_zero, play_one, none};
  end Vars
  Actions = {play_zero, play_one};
  Protocol:
    Environment.game_end = false: {play_zero, play_one};
  end Protocol
  Evolution:
    played_action = play_zero if Player1.Action = play_zero;
    played_action = play_one if Player1.Action = play_one;

  end Evolution
end Agent


Agent Player2
  Lobsvars = {at_least_one, game_end};
  Vars:
    played_action: {play_zero, play_one, none};
  end Vars
    Actions = {play_zero, play_one};
  Protocol:
    Environment.game_end = false: {play_zero, play_one};
  end Protocol
  Evolution:
    played_action = play_zero if Player2.Action = play_zero;
    played_action = play_one if Player2.Action = play_one;
  end Evolution
end Agent

Agent Player3
  Lobsvars = {at_least_one, game_end};
  Vars:
    played_action: {play_zero, play_one, none};
  end Vars
    Actions = {play_zero, play_one};
  Protocol:
    Environment.game_end = false: {play_zero, play_one};
  end Protocol
  Evolution:
    played_action = play_zero if Player3.Action = play_zero;
    played_action = play_one if Player3.Action = play_one;
  end Evolution
end Agent

Evaluation
        win1 if Environment.at_least_one = true and  Player1.played_action = play_one or (Environment.at_least_one = false and  Player1.played_action = play_zero) ;
        win2 if Environment.at_least_one = true and  Player2.played_action = play_one or (Environment.at_least_one = false and  Player2.played_action = play_zero) ;
        win3 if Environment.at_least_one = true and  Player3.played_action = play_one or (Environment.at_least_one = false and  Player3.played_action = play_zero) ;
        at_least_one if Environment.at_least_one = true;
end Evaluation

InitStates
        Environment.at_least_one = false and
        Environment.game_end = false and
        Player1.played_action= none and
        Player2.played_action= none and
        Player3.played_action= none;
end InitStates


Groups
  g1 = {Player1};
  g2 = {Player2};
  g3 = {Player3};
  g_all = {Player1, Player2, Player3};
end Groups


Formulae
  <g_all> F win2;
  <g_all> F ! win2;
  <g1> X <g1> G win3;
end Formulae
